{"version":3,"sources":["../../src/components/NPSScale/index.tsx","../../src/NPS.tsx","App.tsx","index.tsx"],"names":["NPSScale","start","score","worstLabel","bestLabel","onSubmit","React","value","setValue","handleMouseLeave","className","styles","Array","length","end","key","i","onMouseEnter","handleMouseEnter","onMouseLeave","onClick","handleClick","NPS","animated","question","thanksMessage","dismissed","scaleWorstLabel","scaleBestLabel","onDismissed","App","useState","setScore","setDismissed","console","log","ReactDOM","render","document","getElementById"],"mappings":"6XAYA,SAAwBA,K,IAyCTC,EAAf,EAxCEC,U,IACAC,sBAAaA,EAAbA,sB,IACAC,qBAAYA,EAAZA,qBACAC,a,EAE0BC,gBAAnBC,OAAOC,OAIRC,EAAmB,WACvBD,SAKF,OACE,yBAAKE,UAAWC,GACd,8BAuBSV,EAlDf,EAkDA,EAjDA,GAkDSW,MAAA,KAAW,CAAEC,OAAQC,IAAc,IAAnC,KAA4C,qBAAYb,EAAZ,MAvB5C,KAAoB,mBACnB,yBACEc,IAAKC,EACLN,UAAcC,EAAL,KACPJ,UAAkBA,GAAlBA,EAA+BI,EADxB,IAGTM,aAAc,kBAlBC,SAACV,GACxBC,KAiB4BU,CAAN,IACdC,aAAcV,EACdW,QAAS,kBAdC,SAACb,GACnBF,GAAYA,EAAZA,GAauBgB,CAAN,KAETf,6BAViB,QAcvB,yBAAKI,UAAWC,GACd,yBAAKD,UAAcC,EAAL,IAAqBA,GADrC,GAEE,yBAAKD,UAAcC,EAAL,IAAqBA,GAnBzC,K,0ECdcW,G,QACdC,oBAAWA,GAAA,E,IACXC,oBAAWA,EAAXA,uE,IACAC,yBAAgBA,EAAhBA,iCACAC,c,IACAxB,iBAAQA,EAAA,OACRyB,oBACAC,mBACAvB,aACAwB,gBASA,OAAOH,EAAY,KACjB,yBAAKhB,UAAcC,EAAL,KAAoBY,EAAWZ,EAA/B,KACZ,4BAAQD,UAAWC,EAAcS,QATf,WACpBS,GAAeA,MAOf,UAKG3B,EACC,yBAAKQ,UAAWC,GADZ,GAGJ,yBAAKD,UAAWC,GACd,uBAAGD,UAAWC,GADhB,GAEE,qBACER,WAAYwB,EACZvB,UAAWwB,EACX1B,MAAOA,EACPG,SAnBW,SAACH,GACpBG,GAAYA,EAAZA,SCVWyB,G,MAdH,WAAO,IAAD,EACUxB,IAAMyB,SAAwB,MADxC,mBACT7B,EADS,KACF8B,EADE,OAEkB1B,IAAMyB,UAAS,GAFjC,mBAETL,EAFS,KAEEO,EAFF,KAIhB,OACE,kBAAC,EAAD,CACE/B,MAAOA,EACPwB,UAAWA,EACXrB,SAAU,SAACH,GAAWgC,QAAQC,IAAR,kBAAuBjC,IAAU8B,EAAS9B,IAChE2B,YAAa,kBAAMI,GAAa,QCRtCG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.75e8aaa7.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './styles.module.css'\n\nconst MIN = 0\nconst MAX = 10\n\ntype Props = {\n  score: number | null\n  worstLabel?: string\n  bestLabel?: string\n  onSubmit?: (value: number) => void\n}\nexport default function NPSScale({\n  score,\n  worstLabel = `Not at all likely`,\n  bestLabel = `Extremely likely`,\n  onSubmit\n}: Props) {\n  const [value, setValue] = React.useState<number | null>(score)\n  const handleMouseEnter = (value: number) => {\n    setValue(value)\n  }\n  const handleMouseLeave = () => {\n    setValue(null)\n  }\n  const handleClick = (value: number) => {\n    onSubmit && onSubmit(value)\n  }\n  return (\n    <div className={styles.root}>\n      <div>\n        {range(MIN, MAX).map((i) => (\n          <div\n            key={i}\n            className={`${styles.value} ${\n              value !== null && value >= i ? styles.selected : ''\n            }`}\n            onMouseEnter={() => handleMouseEnter(i)}\n            onMouseLeave={handleMouseLeave}\n            onClick={() => handleClick(i)}\n          >\n            <div>{i}</div>\n          </div>\n        ))}\n      </div>\n      <div className={styles.legend}>\n        <div className={`${styles.label} ${styles.left}`}>{worstLabel}</div>\n        <div className={`${styles.label} ${styles.right}`}>{bestLabel}</div>\n      </div>\n    </div>\n  )\n}\n\nfunction range(start: number, end: number) {\n  return Array.from({ length: end - start + 1 }).map((_, idx) => start + idx)\n}\n","import React from 'react'\nimport NPSScale from './components/NPSScale'\nimport styles from './styles.module.css'\ntype Props = {\n  animated?: boolean\n  dismissed?: boolean\n  score?: number | null\n  question?: string\n  thanksMessage?: string\n  scaleWorstLabel?: string\n  scaleBestLabel?: string\n  onSubmit?: (score: number) => void\n  onDismissed?: () => void\n}\nexport function NPS({\n  animated = true,\n  question = `How likely are you to recommend us to your friends and colleagues?`,\n  thanksMessage = `Thank you for your feedback!`,\n  dismissed,\n  score = null,\n  scaleWorstLabel,\n  scaleBestLabel,\n  onSubmit,\n  onDismissed\n}: Props) {\n  const handleDismiss = () => {\n    onDismissed && onDismissed()\n  }\n  const handleSubmit = (score: number) => {\n    onSubmit && onSubmit(score)\n  }\n\n  return dismissed ? null : (\n    <div className={`${styles.root} ${animated ? styles.animated : ''}`}>\n      <button className={styles.close} onClick={handleDismiss}>\n        âœ•\n      </button>\n\n      {score ? (\n        <div className={styles.inner}>{thanksMessage}</div>\n      ) : (\n        <div className={styles.inner}>\n          <p className={styles.message}>{question}</p>\n          <NPSScale\n            worstLabel={scaleWorstLabel}\n            bestLabel={scaleBestLabel}\n            score={score}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport NPS from '@kazukinagata/react-nps-typescript'\nimport '@kazukinagata/react-nps-typescript/dist/index.css'\n\nconst App = () => {\n  const [score, setScore] = React.useState<number | null>(null)\n  const [dismissed, setDismissed] = React.useState(false)\n\n  return (\n    <NPS\n      score={score}\n      dismissed={dismissed}\n      onSubmit={(score) => {console.log(`clicked ${score}`); setScore(score)}}\n      onDismissed={() => setDismissed(true)}\n    />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}